// <auto-generated />
using AkariBeauty.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace AkariBeauty.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250402001519_Banco_Versao1")]
    partial class Banco_Versao1
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("AkariBeauty.Objects.Models.Servico", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("descricao");

                    b.Property<string>("ServicoPrestado")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("servicoprestado");

                    b.Property<float>("ValorBase")
                        .HasColumnType("real")
                        .HasColumnName("valorbase");

                    b.HasKey("Id");

                    b.ToTable("servico");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Descricao = "Corte masculino e feminino",
                            ServicoPrestado = "Corte de Cabelo",
                            ValorBase = 50f
                        },
                        new
                        {
                            Id = 2,
                            Descricao = "Manicure completa",
                            ServicoPrestado = "Manicure",
                            ValorBase = 30f
                        },
                        new
                        {
                            Id = 3,
                            Descricao = "Sessão de massagem relaxante",
                            ServicoPrestado = "Massagem Relaxante",
                            ValorBase = 100f
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
